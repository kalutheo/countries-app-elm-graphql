-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Countries.Object.Continent exposing (code, countries, name)

import Countries.InputObject
import Countries.Interface
import Countries.Object
import Countries.Scalar
import Countries.ScalarDecoders
import Countries.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| -}
code : SelectionSet (Maybe String) Countries.Object.Continent
code =
    Object.selectionForField "(Maybe String)" "code" [] (Decode.string |> Decode.nullable)


{-| -}
name : SelectionSet (Maybe String) Countries.Object.Continent
name =
    Object.selectionForField "(Maybe String)" "name" [] (Decode.string |> Decode.nullable)


{-| -}
countries : SelectionSet decodesTo Countries.Object.Country -> SelectionSet (Maybe (List (Maybe decodesTo))) Countries.Object.Continent
countries object_ =
    Object.selectionForCompositeField "countries" [] object_ (identity >> Decode.nullable >> Decode.list >> Decode.nullable)
